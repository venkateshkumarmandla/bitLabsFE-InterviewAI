{
    "testName": "Python Programming MCQ Test",
    "duration": "30 mins",
    "numberOfQuestions": 30,
    "topicsCovered": ["Python Programming"],
    "questions": [
      {
        "id": 1,
        "question": "What is the output of the following Python code?\n```python\nprint(0.1 + 0.2 == 0.3)\n```",
        "options": [
          "True",
          "False",
          "None",
          "Error"
        ],
        "answer": "False"
      },
      {
        "id": 2,
        "question": "Which of the following statements is true about Python's GIL (Global Interpreter Lock)?",
        "options": [
          "GIL allows multiple native threads to execute Python bytecodes at once.",
          "GIL prevents multiple native threads from executing Python bytecodes at once.",
          "GIL can be disabled in Python by using a special library.",
          "GIL only affects Python 3.x versions."
        ],
        "answer": "GIL prevents multiple native threads from executing Python bytecodes at once."
      },
      {
        "id": 3,
        "question": "What will be the output of the following Python code?\n```python\nlist1 = [1, 2, 3]\nlist2 = list1\nlist2.append(4)\nprint(list1)\n```",
        "options": [
          "[1, 2, 3]",
          "[1, 2, 3, 4]",
          "Error",
          "[4]"
        ],
        "answer": "[1, 2, 3, 4]"
      },
      {
        "id": 4,
        "question": "Which of the following methods can be used to create an iterator in Python?",
        "options": [
          "__iter__()",
          "__next__()",
          "iter()",
          "next()"
        ],
        "answer": "iter()"
      },
      {
        "id": 5,
        "question": "What does the 'yield' keyword do in Python?",
        "options": [
          "It returns a value and exits the function.",
          "It returns a generator and pauses the function execution.",
          "It raises an exception in the code.",
          "It is used to import a module."
        ],
        "answer": "It returns a generator and pauses the function execution."
      },
      {
        "id": 6,
        "question": "Which of the following Python data structures does not allow duplicate values?",
        "options": [
          "List",
          "Dictionary",
          "Tuple",
          "Set"
        ],
        "answer": "Set"
      },
      {
        "id": 7,
        "question": "What is the output of the following Python code?\n```python\nx = 'Hello'\ny = ''.join([i if i != 'l' else 'k' for i in x])\nprint(y)\n```",
        "options": [
          "Hello",
          "Hekko",
          "Heklo",
          "Error"
        ],
        "answer": "Hekko"
      },
      {
        "id": 8,
        "question": "How can you define a function with a variable number of arguments in Python?",
        "options": [
          "def func(*args):",
          "def func(args):",
          "def func(args*):",
          "def func(*args**):"
        ],
        "answer": "def func(*args):"
      },
      {
        "id": 9,
        "question": "Which of the following will correctly copy an object in Python?",
        "options": [
          "copy = original",
          "copy = original.copy()",
          "copy = original.deepcopy()",
          "copy = copy.deepcopy(original)"
        ],
        "answer": "copy = copy.deepcopy(original)"
      },
      {
        "id": 10,
        "question": "What will be the output of the following Python code?\n```python\nprint(bool(0), bool(3.14159), bool(-3), bool(1.0+1j))\n```",
        "options": [
          "False True True True",
          "True True True True",
          "False False False False",
          "False True False True"
        ],
        "answer": "False True True True"
      },
      {
        "id": 11,
        "question": "How do you handle exceptions in Python?",
        "options": [
          "Using try-except blocks",
          "Using if-else statements",
          "Using error handling functions",
          "Using conditional expressions"
        ],
        "answer": "Using try-except blocks"
      },
      {
        "id": 12,
        "question": "Which Python keyword is used to define an anonymous function?",
        "options": [
          "lambda",
          "def",
          "function",
          "anon"
        ],
        "answer": "lambda"
      },
      {
        "id": 13,
        "question": "Which of the following is not a valid Python data type?",
        "options": [
          "Integer",
          "String",
          "Character",
          "List"
        ],
        "answer": "Character"
      },
      {
        "id": 14,
        "question": "What is the result of the following Python code?\n```python\nx = [1, 2, 3]\ny = [4, 5]\nprint(x + y)\n```",
        "options": [
          "[1, 2, 3, 4, 5]",
          "[1, 2, 3, [4, 5]]",
          "[[1, 2, 3], [4, 5]]",
          "[5, 7, 8]"
        ],
        "answer": "[1, 2, 3, 4, 5]"
      },
      {
        "id": 15,
        "question": "Which Python built-in function is used to get the length of a list?",
        "options": [
          "len()",
          "size()",
          "length()",
          "count()"
        ],
        "answer": "len()"
      },
      {
        "id": 16,
        "question": "What is the purpose of the 'self' keyword in Python?",
        "options": [
          "It is used to define global variables.",
          "It refers to the instance of the class.",
          "It is used to define static methods.",
          "It is a reserved keyword with no special purpose."
        ],
        "answer": "It refers to the instance of the class."
      },
      {
        "id": 17,
        "question": "What will be the output of the following Python code?\n```python\ndef f(x, l=[]):\n    for i in range(x):\n        l.append(i*i)\n    print(l)\n\nf(2)\nf(3, [3, 2, 1])\nf(3)\n```",
        "options": [
          "[0, 1]\n[3, 2, 1, 0, 1, 4]\n[0, 1, 0, 1, 4]",
          "[0, 1]\n[3, 2, 1, 0, 1, 4]\n[0, 1, 4]",
          "[0, 1]\n[3, 2, 1, 0, 1, 4]\n[0, 1]",
          "[0, 1]\n[3, 2, 1, 0, 1, 4]\n[0, 1, 0, 1, 4, 9]"
        ],
        "answer": "[0, 1]\n[3, 2, 1, 0, 1, 4]\n[0, 1, 4]"
      },
      {
        "id": 18,
        "question": "How can you generate random numbers in Python?",
        "options": [
          "Using the random module",
          "Using the math module",
          "Using the numpy module",
          "Using the sys module"
        ],
        "answer": "Using the random module"
      },
      {
        "id": 19,
        "question": "Which of the following is a mutable data type in Python?",
        "options": [
          "List",
          "Tuple",
          "String",
          "Integer"
        ],
        "answer": "List"
      },
      {
        "id": 20,
        "question": "What will be the output of the following Python code?\n```python\ndef add_to_list(val, lst=[]):\n    lst.append(val)\n    return lst\n\nprint(add_to_list(1))\nprint(add_to_list(2, []))\nprint(add_to_list(3))\n```",
        "options": [
          "[1]\n[2]\n[3]",
          "[1]\n[2]\n[1, 3]",
          "[1]\n[2]\n[3]",
          "[1]\n[2]\n[1, 2, 3]"
        ],
        "answer": "[1]\n[2]\n[1, 3]"
      },
      {
        "id": 21,
        "question": "What does the 'with' statement do in Python?",
        "options": [
          "It simplifies exception handling by encapsulating common preparation and cleanup tasks.",
          "It defines a new block scope.",
          "It is used to handle asynchronous code.",
          "It is a synonym for the 'try' block."
        ],
        "answer": "It simplifies exception handling by encapsulating common preparation and cleanup tasks."
      },
      {
        "id": 22,
        "question": "Which of the following is not a valid method for a Python dictionary?",
        "options": [
          "keys()",
          "values()",
          "items()",
          "append()"
        ],
        "answer": "append()"
      },
      {
        "id": 23,
        "question": "What is the output of the following Python code?\n```python\nx = 'abcd'\nfor i in range(len(x)):\n    x[i].upper()\nprint(x)\n```",
        "options": [
          "ABCD",
          "abcd",
          "Error",
          "['A', 'B', 'C', 'D']"
        ],
        "answer": "abcd"
      },
      {
        "id": 24,
        "question": "How do you create a virtual environment in Python?",
        "options": [
          "python -m venv env",
          "python -m virtualenv env",
          "python -m create_env env",
          "python -m pyenv env"
        ],
        "answer": "python -m venv env"
      },
      {
        "id": 25,
        "question": "What will be the output of the following Python code?\n```python\nprint('%.2f' % 123.456)\n```",
        "options": [
          "123.45",
          "123.456",
          "123.46",
          "123"
        ],
        "answer": "123.46"
      },
      {
        "id": 26,
        "question": "Which of the following is the correct syntax for defining a class in Python?",
        "options": [
          "class MyClass:",
          "class MyClass[]:",
          "def MyClass():",
          "define MyClass():"
        ],
        "answer": "class MyClass:"
      },
      {
        "id": 27,
        "question": "What will be the output of the following Python code?\n```python\nx = [1, 2, 3, 4]\ny = [v**2 for v in x]\nprint(y)\n```",
        "options": [
          "[1, 2, 3, 4]",
          "[1, 4, 9, 16]",
          "[1, 8, 27, 64]",
          "[2, 4, 6, 8]"
        ],
        "answer": "[1, 4, 9, 16]"
      },
      {
        "id": 28,
        "question": "Which of the following is not a keyword in Python?",
        "options": [
          "pass",
          "eval",
          "assert",
          "nonlocal"
        ],
        "answer": "eval"
      },
      {
        "id": 29,
        "question": "Which of the following methods is used to find the position of an element in a list in Python?",
        "options": [
          "find()",
          "index()",
          "position()",
          "location()"
        ],
        "answer": "index()"
      },
      {
        "id": 30,
        "question": "What will be the output of the following Python code?\n```python\nx = [1, 2, 3, 4]\nz = x * 2\nprint(z)\n```",
        "options": [
          "[1, 2, 3, 4, 1, 2, 3, 4]",
          "[2, 4, 6, 8]",
          "[1, 4, 9, 16]",
          "[1, 1, 2, 2, 3, 3, 4, 4]"
        ],
        "answer": "[1, 2, 3, 4, 1, 2, 3, 4]"
      }
    ]
  }
  